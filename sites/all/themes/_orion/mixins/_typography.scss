// Custom typographical mixins
// Dependencies: typeplate variables

// Apply certain styles to all headers.
@mixin headers {
  h1,h2,h3,h4,h5,h6 {
    @content;
  }
}

// Scale Header Sizes
@mixin header-font-scale($scalar: 1) {
  h1 {@include typl8-typescale($alpha   * $scalar, $typl8-font-base, $typl8-typescale-unit, $typl8-measure);}
  h2 {@include typl8-typescale($beta    * $scalar, $typl8-font-base, $typl8-typescale-unit, $typl8-measure);}
  h3 {@include typl8-typescale($gamma   * $scalar, $typl8-font-base, $typl8-typescale-unit, $typl8-measure);}
  h4 {@include typl8-typescale($delta   * $scalar, $typl8-font-base, $typl8-typescale-unit, $typl8-measure);}
  h5 {@include typl8-typescale($epsilon * $scalar, $typl8-font-base, $typl8-typescale-unit, $typl8-measure);}
  h6 {@include typl8-typescale($zeta    * $scalar, $typl8-font-base, $typl8-typescale-unit, $typl8-measure);}
}

// Auto-scale Header Font Sizes
// @param $start - The rem width to start scaling. (Outer breakpoint)
// @param $stop  - The rem width to stop scaling.  (Inner breakpoint)
@mixin header-scale($start, $stop: 30, $interval: 9, $min-scale: 0.60) {
  $itt: 1;
  $bp: 0;

  @while $itt < $interval {
    $last: $bp;
    $bp: ((($start - $stop) / $interval) * ($interval - $itt)) + $stop;
    $scale: 1 - ((1 - $min-scale) / ($interval - 1)) * $itt;

    @if $last > 0 {
      @media (max-width: $bp) {
        @include header-font-scale($scale);
      }
    } @else {
      @media (max-width: $bp) {
        @include header-font-scale($scale);
      }
    }

    $itt: $itt + 1;
  }
}

// If the first line of an element is indented, indent the following lines.
// @param $size - The width of the hanging indentation.
@mixin hanging-indent($size) {
  padding-left: $size;
  text-indent: -$size;
}

// -- Font size scaling using media queries
@mixin scale-font-size($start-width: 30rem, $start-size: 1em, $end-width: 80rem, $end-size: 1.2em, $int: 5) {
  $itt: 0;

  @while $itt <= $int {
    $bp: $start-width + (($end-width - $start-width) * ($itt / $int));
    $inc: ($end-size - $start-size) * ($itt / $int);
    $size: $start-size + $inc;
    $scale: strip-units($inc) + 1;

    @media (min-width: $bp) {
      font-size: $size;
    }

    $itt: $itt + 1;
  }
}
